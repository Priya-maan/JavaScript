Exercise: Practicing with functions

Task 1:
Write a function named letterFinder that accepts two parameters: word and match.

Task 2:
Code a 'for' loop inside the function's body. The for loop's counter should start at zero, increment by 1 on each iteration and exit when the counter variable's value is equal to the length of the word parameter.

Task 3:
Add an if statement inside the for loop whose condition works as follows:

 Access each of the letters inside the passed in word using the counter variable, with word[i]. 

Check if the current word[i] is equal to the value of match.

Task 4:
console.log the following inside the body of the if statement: console.log('Found the', match, 'at', i).

Task 5:
Write the else condition. Here you'll just console log the following: console.log('---No match found at', i).

Task 6:
Call the letterFinder and pass it as its first argument as the string "test" and as its second argument, the string "t".

Your output should be the following:

Found the t at 0

---No match found at 1

---No match found at 2

Found the t at 3

EXCERCISE 2: 

Tasks to complete:
Create a new empty array literal and assign it to the variable clothes.

Add 5 of your favorite items of clothing as strings using the push() method.

Remove the fifth piece of clothing from the array using the pop() method.

Add a new piece of clothing using the push() method.

Use console.log to show the third item from the clothes array in the console.

Create a new empty object literal and assign it to the variable favCar.

Using the dot notation, assign a color property to the favCar object and give it a string value with the color of your choice.

Using the dot notation, assign a covertible property to the favCar object and give it a boolean value of your choice.

Use the console to log the entire favCar object.

// Exercise: Error prevention
Instructions
Task 1: Code a function declaration
You need to code a function declaration named addTwoNums, which accepts numbers a and b and console logs a + b.

Task 2: Invoke the addTwoNums function with a number and a string
You need to invoke the addTwoNums using the following arguments: 5 and "5".

Task 3: Update the addTwoNums function with a try...catch block
Add the try and catch blocks inside the function definition's body. For now, just make sure that the console log of a + b is inside the try block. Additionally, the catch block should catch an error named err and, inside the body of the catch block, you need to console log the err value.

Task 4: If the passed-in arguments are not numbers, throw an error
If either of the arguments passed to the addTwoNums are not numbers, you'll throw an error.

Specifically, code a conditional with the following logic:

if the typeof the a parameter is not equal to 'number', throw a new ReferenceError. Inside the ReferenceError, pass a custom error message of 'the first argument is not a number'.

else if the typeof the b parameter is not equal to 'number', throw a new ReferenceError. Inside the ReferenceError, pass a custom error message of 'the second argument is not a number'.

else, console log a + b  

Once you've completed this task, all the code inside the try block will be inside these conditional statements.

Task 5: Update the catch block
Inside the catch block, update the code from console.log(err) to console.log("Error!", err).

Task 6: Invoke the addTwoNums function
Invoke the addTwoNums function using 5 and "5" as arguments.

Task 7: Add another console log under the addTwoNums function invocation
Add another line of code that console logs the string "It still works".

// Excercise 4 : Defensive programming

- For this exercise, let's make sure that both of the
arguments that are passed in satisfy the following
criteria:

- The length of the word parameter cannot be less 
 than 2.

- The length of the match parameter must be 1.

- The type of both the word and the match parameters 
must be string.

- Just above the for loop in the letterFinder function
definition, declare a variable named condition1 and
assign to it the following code: 
typeof(word) == 'string' && word.length >= 2.

- Declare a variable named condition2 on the next 
line and assign to it and assign to it a check 
that makes sure that the type of match is a string 
AND that the length of the match variable is equal 
to 1.

- Write an if statement on the next line that checks 
that condition1 is true, and condition2 is true

- Move the rest of the function's body into the if 
statement you wrote in the previous step.

- Code an "else" block after the "if" condition and 
console.log the following: "Please pass correct 
arguments to the function.".

- As a failing test, run the letterFinder function 
and pass it with any two numbers as arguments.

- As a passing test, run the letterFinder funciton 
and pass it with correct arguments, 
such as: letterFinder("cat", "c").